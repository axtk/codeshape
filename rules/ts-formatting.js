module.exports = {
    'brace-style': 'off',
    '@typescript-eslint/brace-style': ['error', 'stroustrup', {allowSingleLine: true}],
    'comma-dangle': 'off',
    '@typescript-eslint/comma-dangle': ['error', 'always-multiline'],
    'comma-spacing': 'off',
    '@typescript-eslint/comma-spacing': 'error',
    'func-call-spacing': 'off',
    '@typescript-eslint/func-call-spacing': 'error',
    'indent': 'off',
    '@typescript-eslint/indent': ['error', 4, {
        SwitchCase: 1,
        outerIIFEBody: 'off',
        ignoredNodes: [
            'TSUnionType',
            'TSTypeParameterInstantiation',
        ],
    }],
    'key-spacing': 'off',
    '@typescript-eslint/key-spacing': 'error',
    'keyword-spacing': 'off',
    '@typescript-eslint/keyword-spacing': 'error',
    'lines-between-class-members': 'off',
    '@typescript-eslint/lines-between-class-members': ['error', 'always', {
        exceptAfterSingleLine: true,
    }],
    'no-extra-parens': 'off',
    '@typescript-eslint/no-extra-parens': ['error', 'all', {
        nestedBinaryExpressions: false,
        ignoreJSX: 'multi-line',
    }],
    'object-curly-spacing': 'off',
    '@typescript-eslint/object-curly-spacing': 'error',
    'padding-line-between-statements': 'off',
    '@typescript-eslint/padding-line-between-statements': [
        'error',
        {blankLine: 'always', prev: '*', next: 'return'},
        {blankLine: 'always', prev: ['const', 'let'], next: '*'},
        {blankLine: 'any', prev: ['const', 'let'], next: ['const', 'let']},
        {blankLine: 'always', prev: 'import', next: '*'},
        {blankLine: 'any', prev: 'import', next: 'import'},
        {blankLine: 'always', prev: 'block-like', next: '*'},
        {blankLine: 'always', prev: '*', next: 'block-like'},
        {blankLine: 'always', prev: 'directive', next: '*'},
        {blankLine: 'any', prev: 'directive', next: 'directive'},
        {blankLine: 'always', prev: '*', next: ['interface', 'type']},
        {blankLine: 'always', prev: ['interface', 'type'], next: '*'},
        {blankLine: 'any', prev: ['interface', 'type'], next: ['interface', 'type']},
    ],
    'quotes': 'off',
    '@typescript-eslint/quotes': ['error', 'single', {avoidEscape: false}],
    'semi': 'off',
    '@typescript-eslint/semi': 'error',
    'space-before-blocks': 'off',
    '@typescript-eslint/space-before-blocks': 'error',
    'space-before-function-paren': 'off',
    '@typescript-eslint/space-before-function-paren': ['error', {
        anonymous: 'never',
        named: 'never',
        asyncArrow: 'always',
    }],
    'space-infix-ops': 'off',
    '@typescript-eslint/space-infix-ops': 'error',
};
